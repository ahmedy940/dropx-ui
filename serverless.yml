service: dropx-lambdas

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  environment:
    NODE_ENV: production
    STAGE: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
            - ssm:GetParametersByPath
          Resource: arn:aws:ssm:us-east-1:*:parameter/dropx/${opt:stage, 'dev'}/*
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource:
            - arn:aws:lambda:us-east-1:605134429152:function:dropx-lambdas-*-merchantHandler

package:
  individually: true
  patterns:
    - '!**/*'
    - 'app/lambda/**'
    - 'node_modules/.prisma/client/**'
    - 'node_modules/@prisma/client/**'
    - '!**/*.test.ts'
    - '!**/*.spec.ts'
    - '!tests/**'
    - '!**/*.md'
    - '!**/*.map'

functions:
  authHandler:
    handler: app/lambda/lambda-shopify-auth.handler
    events:
      - httpApi:
          path: /shopify/org-auth
          method: post

  checkOrgCustomerHandler:
    handler: app/lambda/lambda-check-org-customer.handler
    events:
      - httpApi:
          path: /check-org-customer
          method: post

  checkMerchantHandler:
    handler: app/lambda/lambda-check-merchant.handler
    events:
      - httpApi:
          path: /check-merchant
          method: post

  createOrgCustomerHandler:
    handler: app/lambda/lambda-create-org-customer.handler
    events:
      - httpApi:
          path: /create-org-customer
          method: post

  remixHandler:
    handler: app/lambda/remixHandler.handler
    events:
      - httpApi:
          path: /
          method: ANY
      - httpApi:
          path: /{proxy+}
          method: ANY

  postInstallHandler:
    handler: app/lambda/lambda-post-install.handler
    events:
      - httpApi:
          path: /post-install
          method: get

plugins:
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node18
    platform: node
    concurrency: 10
    external:
      - '@prisma/client'
      - '.prisma/client'
      - 'aws-sdk'
      - 'dotenv'
      - 'path'
      - 'crypto'
    entryPoints:
      - app/lambda/remixHandler.ts
      - app/lambda/lambda-handler.ts
      - app/lambda/lambda-shopify-auth.ts
      - app/lambda/lambda-check-org-customer.ts
      - app/lambda/lambda-check-merchant.ts
      - app/lambda/lambda-create-org-customer.ts
      - app/lambda/lambda-post-install.ts

# resources:
#   Outputs:
#     RemixHandlerFunction:
#       Value: !GetAtt remixHandler.Arn
#       Export:
#         Name: RemixHandlerFunction
#     AuthHandlerFunction:
#       Value: !GetAtt authHandler.Arn
#       Export:
#         Name: AuthHandlerFunction
#     CheckOrgCustomerHandlerFunction:
#       Value: !GetAtt checkOrgCustomerHandler.Arn
#       Export:
#         Name: CheckOrgCustomerHandlerFunction
#     CheckMerchantHandlerFunction:
#       Value: !GetAtt checkMerchantHandler.Arn
#       Export:
#         Name: CheckMerchantHandlerFunction
#     CreateOrgCustomerHandlerFunction:
#       Value: !GetAtt createOrgCustomerHandler.Arn
#       Export:
#         Name: CreateOrgCustomerHandlerFunction
#     PostInstallHandlerFunction:
#       Value: !GetAtt postInstallHandler.Arn
#       Export:
#         Name: PostInstallHandlerFunction